check_lnx_x86_64_stable:
    stage: check
    image: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/lnx_x86_64_stable
    before_script:
        - if [ ! -d "logs" ]; then mkdir -p logs; fi
    script:
        - cargo +stable check 2>&1 | tee logs/check
    artifacts:
        untracked: true
        when: always

check_lnx_x86_64_beta:
    stage: check
    image: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/lnx_x86_64_beta
    before_script:
        - if [ ! -d "logs" ]; then mkdir -p logs; fi
    script:
        - cargo +beta check 2>&1 | tee logs/check
    artifacts:
        untracked: true
        when: always

check_lnx_x86_64_nightly:
    stage: check
    image: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/lnx_x86_64_nightly
    before_script:
        - if [ ! -d "logs" ]; then mkdir -p logs; fi
    script:
        - cargo +nightly check 2>&1 | tee logs/check
    artifacts:
        untracked: true
        when: always

test_lnx_x86_64_stable:
    stage: test
    image: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/lnx_x86_64_stable
    before_script:
        - if [ ! -d "logs" ]; then mkdir -p logs; fi
    script:
        - cargo +stable test 2>&1 | tee logs/test
    artifacts:
        untracked: true
        when: always

test_lnx_x86_64_beta:
    stage: test
    image: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/lnx_x86_64_beta
    before_script:
        - if [ ! -d "logs" ]; then mkdir -p logs; fi
    script:
        - cargo +beta test 2>&1 | tee logs/test
    artifacts:
        untracked: true
        when: always

test_lnx_x86_64_nightly:
    stage: test
    image: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/lnx_x86_64_nightly
    before_script:
        - if [ ! -d "logs" ]; then mkdir -p logs; fi
    script:
        - cargo +nightly test 2>&1 | tee logs/test
    artifacts:
        untracked: true
        when: always