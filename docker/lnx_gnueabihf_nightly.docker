FROM registry.gitlab.com/sakul6499.de/sakul6499.de/base:latest
LABEL maintainer="me@sakul6499.de"

# Install compiler
USER aur
RUN yay -S --noconfirm --force --useask -mflags --skipinteg arm-linux-gnueabihf-binutils
RUN yay -S --noconfirm --force --useask -mflags --skipinteg arm-linux-gnueabihf-gcc-stage1
RUN yay -S --noconfirm --force --useask -mflags --skipinteg arm-linux-gnueabihf-linux-api-headers
RUN yay -S --noconfirm --force --useask -mflags --skipinteg arm-linux-gnueabihf-glibc-headers
RUN yay -S --noconfirm --force --useask -mflags --skipinteg arm-linux-gnueabihf-gcc-stage2
RUN yay -S --noconfirm --force --useask -mflags --skipinteg arm-linux-gnueabihf-glibc
RUN yay -S --noconfirm --force --useask -mflags --skipinteg arm-linux-gnueabihf-gcc 

# Rust
## Install toolchain
RUN rustup install nightly-armv7-unknown-linux-gnueabihf
RUN rustup default nightly-armv7-unknown-linux-gnueabihf

## Add target
RUN rustup target add armv7-unknown-linux-gnueabihf

## Add components
RUN rustup component add rust-std --target armv7-unknown-linux-gnueabihf

## Tell rust which compiler to use
RUN if [ ! -d "$HOME/.cargo ]; then mkdir -p "$HOME/.cargo"; fi && echo -e "[target.armv7-unknown-linux-gnueabihf]\nlinker = \"arm-linux-gnueabihf-gcc\"" > $HOME/.cargo/config

# WASM
USER rust
RUN cargo install wasm-pack

# Exit as rust
USER rust