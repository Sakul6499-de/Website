stages:
  - build
  - test
  - build-docker

build:
  image: rust
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - rustup update nightly
    - rustup default nightly
  script:
    - cargo build
  artifacts:
    paths:
      - target/

build-docs:
  image: rust
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - rustup update nightly
    - rustup default nightly
  script:
    - cargo doc
  artifacts:
    paths:
      - target/

test:
  image: rust
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - rustup update nightly
    - rustup default nightly
  script:
    - cargo test
  artifacts:
    paths:
      - target/

build-docker-server:
  stage: build-docker
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE: "$CI_REGISTRY_IMAGE/server"
  before_script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $IMAGE:latest || true
    - docker build --cache-from $IMAGE:latest --tag $IMAGE:$CI_COMMIT_SHA --tag $IMAGE:latest -f docker/server/Dockerfile .
    - docker push $IMAGE:$CI_COMMIT_SHA
    - docker push $IMAGE:latest

build-docker-importer:
  stage: build-docker
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE: "$CI_REGISTRY_IMAGE/importer"
  before_script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $IMAGE:latest || true
    - docker build --cache-from $IMAGE:latest --tag $IMAGE:$CI_COMMIT_SHA --tag $IMAGE:latest -f docker/import/Dockerfile .
    - docker push $IMAGE:$CI_COMMIT_SHA
    - docker push $IMAGE:latest
