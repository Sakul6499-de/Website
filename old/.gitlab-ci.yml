stages:
  - triggered_update
  - build
  - build_remote
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

update_repo:
  stage: triggered_update
  image: alpine
  before_script:
    - apk update && apk add git
  script:
    - git pull origin master
    - git pull submodule update --init --recursive
    - git commit -m "Auto-Updated submodules"
    - git push origin master
  only:
    - trigger

deploy:
  stage: deploy
  image: ubuntu:latest
  before_script:
    - apt update && apt install -y ssh rsync
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$PRIVATE_KEY")
  script:
    - ssh deploy@raw.sakul6499.de "rm -rf website; mkdir -p website"
    - rsync -ravz -I -O --no-perms --no-owner --no-group --delete -e ssh * deploy@raw.sakul6499.de:/home/deploy/website/
    - ssh deploy@raw.sakul6499.de "cd website && bash make_docker_files.sh deploy"
    - ssh deploy@raw.sakul6499.de "cd website && docker stack rm website; sleep 15"
    - ssh deploy@raw.sakul6499.de "cd website && docker network rm website_default || true; sleep 15"
    - ssh deploy@raw.sakul6499.de "cd website && docker stack deploy --compose-file docker-compose.yml.out website"
  environment:
    name: master
    url: https://sakul6499.de
  only:
    - master


# build_frontend:
#   stage: build
#   image: docker/compose
#   services:
#     - docker:dind
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     DOCKER_DRIVE: overlay2
#     IMAGE_NAME: registry.gitlab.com/sakul6499.de/website/frontend:x86
#   before_script:
#     - docker info
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#   script:
#     - sh make_docker_files.sh
#     - docker build -t $IMAGE_NAME -f frontend/Dockerfile.out frontend
#     - docker push $IMAGE_NAME
#   only:
#     - branches
#     - tags
#     - api
#     - external
#     - pipelines
#     - pushes
#     - schedule
#     - triggers
#     - web
#     - merge_requests

# build_backend:
#   stage: build
#   image: docker/compose
#   services:
#     - docker:dind
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     DOCKER_DRIVE: overlay2
#     IMAGE_NAME: registry.gitlab.com/sakul6499.de/website/backend:x86
#   before_script:
#     - docker info
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#   script:
#     - sh make_docker_files.sh
#     - docker build -t $IMAGE_NAME -f backend/Dockerfile.out backend
#     - docker push $IMAGE_NAME
#   only:
#     - branches
#     - tags
#     - api
#     - external
#     - pipelines
#     - pushes
#     - schedule
#     - triggers
#     - web
#     - merge_requests

# build_mongo-seeder:
#   stage: build
#   image: docker/compose
#   services:
#     - docker:dind
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     DOCKER_DRIVE: overlay2
#     IMAGE_NAME: registry.gitlab.com/sakul6499.de/website/mongo-seeder:x86
#   before_script:
#     - docker info
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#   script:
#     - sh make_docker_files.sh
#     - docker build -t $IMAGE_NAME -f mongo-seeder/Dockerfile.out mongo-seeder
#     - docker push $IMAGE_NAME
#   only:
#     - branches
#     - tags
#     - api
#     - external
#     - pipelines
#     - pushes
#     - schedule
#     - triggers
#     - web
#     - merge_requests

# build_remote:
#   stage: build_remote
#   image: ubuntu:latest
#   variables:
#     IMAGE_NAME_FRONTEND: registry.gitlab.com/sakul6499.de/website/frontend:arm
#     IMAGE_NAME_BACKEND: registry.gitlab.com/sakul6499.de/website/backend:arm
#     IMAGE_NAME_MONGO: registry.gitlab.com/sakul6499.de/website/mongo-seeder:arm
#   before_script:
#     - apt update && apt install -y ssh rsync
#     - mkdir -p ~/.ssh
#     - eval $(ssh-agent -s)
#     - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#     - ssh-add <(echo "$PRIVATE_KEY")
#   script:
#     - ssh deploy@raw.sakul6499.de "rm -rf website; mkdir -p website"
#     - rsync -ravz -I -O --no-perms --no-owner --no-group --delete -e ssh * deploy@raw.sakul6499.de:/home/deploy/website/
#     - ssh deploy@raw.sakul6499.de "cd website && bash make_docker_files.sh"
#     - ssh deploy@raw.sakul6499.de "cd website && docker build -t $IMAGE_NAME_FRONTEND -f frontend/Dockerfile.out frontend"
#     - ssh deploy@raw.sakul6499.de "cd website && docker build -t $IMAGE_NAME_BACKEND -f backend/Dockerfile.out backend"
#     - ssh deploy@raw.sakul6499.de "cd website && docker build -t $IMAGE_NAME_MONGO -f mongo-seeder/Dockerfile.out mongo-seeder"
#     - ssh deploy@raw.sakul6499.de "cd website && docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY && docker push $IMAGE_NAME_FRONTEND"
#     - ssh deploy@raw.sakul6499.de "cd website && docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY && docker push $IMAGE_NAME_BACKEND"
#     - ssh deploy@raw.sakul6499.de "cd website && docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY && docker push $IMAGE_NAME_MONGO"
#   only:
#       - master